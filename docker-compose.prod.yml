services:
  # MongoDB database
  mongo:
    image: mongo:7.0
    container_name: laboratorioCelular_mongo_prod
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-admin123}
      MONGO_INITDB_DATABASE: laboratorioCelular
    volumes:
      - mongo_data_prod:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - laboratorioCelular_prod
    # Don't expose mongo port in production for security

  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laboratorioCelular_backend_prod
    restart: always
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-admin123}@mongo:27017/laboratorioCelular?authSource=admin
      - PORT=5000
      - FRONTEND_URL=${FRONTEND_URL:-https://your-domain.com}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
    expose:
      - "5000"
    depends_on:
      - mongo
    networks:
      - laboratorioCelular_prod
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React service with nginx
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: laboratorioCelular_frontend_prod
    restart: always
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL:-https://your-api-domain.com/api}
      - REACT_APP_APP_NAME=Laboratorio Celular POS
      - REACT_APP_ENV=production
      - REACT_APP_API_TIMEOUT=15000
    expose:
      - "3000"
    depends_on:
      - backend
    networks:
      - laboratorioCelular_prod
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy
  nginx:
    image: nginx:1.25-alpine
    container_name: laboratorioCelular_nginx_prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/ssl/certs:ro  # SSL certificates for HTTPS
    depends_on:
      - frontend
      - backend
    networks:
      - laboratorioCelular_prod
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongo_data_prod:

networks:
  laboratorioCelular_prod:
    driver: bridge